import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.github.ben-manes.versions' version '0.28.0'

}

apply plugin: 'java'
apply plugin: 'application'

jar {
    enabled = true
}

task assembleDistForContainer(type: Copy) {
    from distZip
    into '.batect/elko-spawn'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.8.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//	runtimeOnly 'org.postgresql:postgresql'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

tasks.withType(Test) {
    testLogging {
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_ERROR,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showCauses true
        showExceptions true
        showStackTraces true
    }
}

mainClassName = 'com.elko.spawn.SpawnApplication'

test {
    useJUnitPlatform()
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
